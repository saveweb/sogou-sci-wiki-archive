<!DOCTYPE html><html class="" data-reactroot=""><head><meta charSet="utf-8"/><meta name="save" content="history"/><meta http-equiv="X-UA-Compatible" content="IE=edge"/><meta name="baidu-site-verification" content="VWGb6TyYx8"/><meta content="GIT - 搜狗科学百科" name="keywords"/><meta content="搜狗科学百科是一部有着平等、协作、分享、自由理念的网络科学全书，为每一个互联网用户创造一个涵盖所有领域知识、服务的中文知识性平台。" name="description"/><meta http-equiv="x-dns-prefetch-control" content="on"/><meta name="server" baike="235" ip="210" env="online"/><link rel="dns-prefetch" href="//cache.soso.com"/><link rel="dns-prefetch" href="//hhy.sogoucdn.com"/><link rel="dns-prefetch" href="//pic.baike.soso.com"/><link rel="dns-prefetch" href="//ugc.qpic.cn"/><link rel="dns-prefetch" href="//xui.ptlogin2.qq.com"/><link rel="dns-prefetch" href="//q1.qlogo.cn"/><link rel="dns-prefetch" href="//q2.qlogo.cn"/><link rel="dns-prefetch" href="//q3.qlogo.cn"/><link rel="dns-prefetch" href="//q4.qlogo.cn"/><link rel="dns-prefetch" href="//q.qlogo.cn"/><link rel="dns-prefetch" href="//img01.sogoucdn.com"/><link rel="dns-prefetch" href="//img02.sogoucdn.com"/><link rel="dns-prefetch" href="//img03.sogoucdn.com"/><link rel="dns-prefetch" href="//img04.sogoucdn.com"/><link rel="Shortcut Icon" href="//www.sogou.com/images/logo/new/favicon.ico?v=4"/><link rel="Bookmark" href="//www.sogou.com/images/logo/new/favicon.ico?v=4"/><link href="//hhy.sogoucdn.com/deploy/ued/new_baike/pc/dist/css/base_b849887.css" rel="stylesheet"/><link href="//hhy.sogoucdn.com/deploy/ued/new_baike/pc/dist/css/detail/detail_378aed5.css" rel="stylesheet"/><link href="//hhy.sogoucdn.com/deploy/ued/new_baike/pc/dist/css/inviteAudit/inviteAudit_7894507.css" rel="stylesheet"/><link rel="stylesheet" href="//hhy.sogoucdn.com/js/lib/highlight/highlight.min.css"/><title>GIT - 搜狗科学百科</title></head><body><script>window._gtag=window._gtag||{};window._gtag.shouldGrayed = false;if ('1b518781a96e402eacf8fc9a6afcf892') window._gtag.traceId = '1b518781a96e402eacf8fc9a6afcf892';if ({"illegality":true}) window.userInfo = {"illegality":true};</script><div class="topnavbox"><ul class="topnav"><li><a href="//www.sogou.com/web?query=">网页</a></li><li><a href="//weixin.sogou.com/weixin?p=75351201">微信</a></li><li><a href="//zhihu.sogou.com/zhihu?p=75351218">知乎</a></li><li><a href="//pic.sogou.com/pics?query=">图片</a></li><li><a href="//v.sogou.com/v?query=">视频</a></li><li><a href="//mingyi.sogou.com/">医疗</a></li><li class="cur"><strong>科学</strong></li><li><a href="//hanyu.sogou.com/">汉语</a></li><li><a href="//wenwen.sogou.com/">问问</a></li><li><a href="//www.sogou.com/docs/more.htm">更多<span class="topraquo">»</span></a></li></ul></div><div id="header"><div class="header-wrap"><a class="header-logo" href="/kexue"></a><div class="header-search"><div class="querybox" id="suggBox"></div></div><div class="header-rgt"><span class="btn-header-rgt btn-edit" id="editLemma">创建</span><div class="header-user no-login"></div></div></div></div><div class="fixed-placeholder" style="visibility:none"></div><div id="container" class=""><div class="content lemma-level2"><div class="detail-title" id="abstract-title"><h1>GIT</h1><a href="#!" class="detail-edit">编辑</a></div><div class="section_content" data-id="49662227904505352"><div class="text_img ed_imgfloat_right"><a class="ed_image_link" data-src="https://pic.baike.soso.com/ugc/baikepic2/12333/20160916155205-650847467.jpg/0" data-bigsrc="https://pic.baike.soso.com/ugc/baikepic2/12333/20160916155205-650847467.jpg/0?width=231&amp;height=174&amp;titlename=git&amp;w=256&amp;h=256" title="点击查看大图" data-w="256" data-h="256" style="background-image:url(https://pic.baike.soso.com/ugc/baikepic2/12333/20160916155205-650847467.jpg/0)" href="#!"></a><div class="text_img_title">git</div></div><div><p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目,是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p>
<p>Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不需要服务器端软件支持。</p></div></div><div id="catalog"></div><div id="paragraphs"></div><div id="references"></div><div class="read-num">阅读 <!-- -->3.8<!-- -->w</div></div><div class="right-side" id="rightSide"></div></div><div class="footer-box"><div id="footer"><div class="footer-logo-wrap"><div class="footer-logo"></div><div class="footer-logo-text">知识·传播·科普</div></div><div class="footer-info">本网站内容采用<a target="_blank" href="https://creativecommons.org/licenses/by-sa/3.0/deed.zh?tdsourcetag=s_pctim_aiomsg">CC-BY-SA 3.0</a>授权</div><div class="footer-btn-wrap"><a target="_blank" href="https://baike.sogou.com/help/#user_protocol">用户协议</a><a target="_blank" href="http://www.sogou.com/docs/terms.htm?v=1">免责声明</a><a target="_blank" href="http://corp.sogou.com/private.html">隐私政策</a><a target="_blank" href="https://baike.sogou.com/kexue/intro.htm">关于我们</a></div></div></div><script>window.lemmaInfo ={"lemmaId":"49361670824306441","versionId":"61066699931188999","title":"GIT","subtitle":"","abstracts":{"paragraphId":"49662227904505352","title":"摘要","versionId":"61066699931189000","lemmaId":49361670824306440,"createType":0,"creator":{"uid":0,"name":null,"pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"createTime":0,"versionEditor":{"uid":15319069,"name":"103%","pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"editTime":1603694589,"comment":null,"dependVersionId":0,"contentType":2,"content":"<p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目,是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p>\n<p>Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不需要服务器端软件支持。</p>","pics":[{"originalUrl":"https://pic.baike.soso.com/ugc/baikepic2/12333/20160916155205-650847467.jpg/0?width=231&height=174&titlename=git&w=256&h=256","url":"https://pic.baike.soso.com/ugc/baikepic2/12333/20160916155205-650847467.jpg/0","rw":256,"rh":256,"title":"git","alt":null,"width":231,"height":174}],"card":null,"references":[],"versionCount":0},"card":{"paragraphId":"49662227904505351","title":"基本信息","versionId":"50377872535234062","lemmaId":49361670824306440,"createType":0,"creator":{"uid":0,"name":null,"pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"createTime":0,"versionEditor":{"uid":81100166,"name":"Axing","pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"editTime":1597323551,"comment":null,"dependVersionId":0,"contentType":3,"content":"","pics":null,"card":{"cardItems":[{"key":"中文名","value":"分布式版本控制系统"},{"key":"外文名","value":"Git"},{"key":"创始人","value":"Linus Torvalds"},{"key":"类型","value":"计算机软件"},{"key":"支持平台","value":"Windows、Mac OS X、Linux/Unix"},{"key":"软件授权","value":"GNU General Public License version 2.0 <sup><a href=\"#quote_1\" class=\"kx_ref\">[1]</a></sup>"}]},"references":[],"versionCount":0},"categories":[{"id":356,"name":"软件开发环境与开发技术","parents":[[{"id":1,"name":"计算机","parents":null},{"id":350,"name":"计算机软件","parents":null}]]}],"creator":{"uid":81100166,"name":"许星","pic":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJbpRG9Zez1HVic5Z1YqwOwrtyK7Da6BzMFCib6HBRbm1mAcpdnPkPpGHVytqTmTlIgSzKibssxWNNvg/132","introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":"","jobBrief":"","role":0,"roleName":null,"title":"","professionalTitle":"员工","phoneNo":null,"editable":true,"partnerId":243,"partnerIdCreateTime":1597479583,"partnerIdPoped":true},"createTime":1596717848,"editor":{"uid":15319069,"name":"103%","pic":"https://cache.soso.com/qlogo/g?b=oidb&k=QfpQTBnF50Gp0DQbjia29wQ&s=100&t=1556460344","introduction":"开发工程师","educations":null,"jobs":null,"works":null,"educationBrief":"","jobBrief":"","role":0,"roleName":null,"title":"","professionalTitle":null,"phoneNo":null,"editable":true,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"editTime":1603694589,"state":1,"versionCount":2,"upNum":37,"downNum":0,"pics":[{"originalUrl":"https://pic.baike.soso.com/ugc/baikepic2/12333/20160916155205-650847467.jpg/0?width=231&height=174&titlename=git&w=256&h=256","url":"https://pic.baike.soso.com/ugc/baikepic2/12333/20160916155205-650847467.jpg/0","rw":256,"rh":256,"title":"git","alt":null,"width":231,"height":174},{"originalUrl":"https://img02.sogoucdn.com/app/a/200698/220_92_20200806211934-1445424197.png?w=220&h=92&titlename=GIT","url":"https://img02.sogoucdn.com/app/a/200698/220_92_20200806211934-1445424197.png","rw":220,"rh":92,"title":"GIT","alt":null,"width":0,"height":0},{"originalUrl":"https://img03.sogoucdn.com/app/a/200698/411_297_20200806224105-435287349.png?w=411&h=297&titlename=%E9%9B%86%E4%B8%AD%E5%BC%8F","url":"https://img03.sogoucdn.com/app/a/200698/411_297_20200806224105-435287349.png","rw":411,"rh":297,"title":"集中式","alt":null,"width":0,"height":0},{"originalUrl":"https://img02.sogoucdn.com/app/a/200698/504_433_20200806224117-364128338.png?w=504&h=433&titlename=%E5%88%86%E5%B8%83%E5%BC%8F","url":"https://img02.sogoucdn.com/app/a/200698/504_433_20200806224117-364128338.png","rw":504,"rh":433,"title":"分布式","alt":null,"width":0,"height":0},{"originalUrl":"https://img01.sogoucdn.com/app/a/200698/683_357_20200806225458-490737400.jpg?w=683&h=357&titlename=","url":"https://img01.sogoucdn.com/app/a/200698/683_357_20200806225458-490737400.jpg","rw":683,"rh":357,"title":"","alt":null,"width":0,"height":0}],"catalogs":[{"level":1,"title":"简介","paragraphId":"49662227938059783","subCatalogs":null},{"level":1,"title":"Git的诞生","paragraphId":"49662227904505353","subCatalogs":null},{"level":1,"title":"分布式特点","paragraphId":"49662227921282576","subCatalogs":null},{"level":1,"title":"Git安装","paragraphId":"49662227938059782","subCatalogs":[{"level":2,"title":"Debian/Ubuntu","paragraphId":"49662227938059782","subCatalogs":null},{"level":2,"title":"Centos/RedHat","paragraphId":"49662227938059782","subCatalogs":null},{"level":2,"title":"Windows","paragraphId":"49662227938059782","subCatalogs":null},{"level":2,"title":"Mac 平台上安装","paragraphId":"49662227938059782","subCatalogs":null}]},{"level":1,"title":"工作流程","paragraphId":"49662227904505354","subCatalogs":null},{"level":1,"title":"基本概念","paragraphId":"49662227921282573","subCatalogs":null},{"level":1,"title":"Git创建仓库","paragraphId":"49662227921282574","subCatalogs":[{"level":2,"title":"git init","paragraphId":"49662227921282574","subCatalogs":null},{"level":2,"title":"git clone","paragraphId":"49662227921282574","subCatalogs":null}]},{"level":1,"title":"Git基本快照","paragraphId":"49662227938059784","subCatalogs":[{"level":2,"title":"git add","paragraphId":"49662227938059784","subCatalogs":null},{"level":2,"title":"git status","paragraphId":"49662227938059784","subCatalogs":null},{"level":2,"title":"git diff","paragraphId":"49662227938059784","subCatalogs":null},{"level":2,"title":"git commit","paragraphId":"49662227938059784","subCatalogs":null},{"level":2,"title":"git reset HEAD","paragraphId":"49662227938059784","subCatalogs":null},{"level":2,"title":"git rm","paragraphId":"49662227938059784","subCatalogs":null},{"level":2,"title":"git mv","paragraphId":"49662227938059784","subCatalogs":null}]},{"level":1,"title":"Git 分支管理","paragraphId":"49662227904505350","subCatalogs":[{"level":2,"title":"列出分支","paragraphId":"49662227904505350","subCatalogs":null},{"level":2,"title":"删除分支","paragraphId":"49662227904505350","subCatalogs":null},{"level":2,"title":"分支合并","paragraphId":"49662227904505350","subCatalogs":null},{"level":2,"title":"合并冲突","paragraphId":"49662227904505350","subCatalogs":null}]},{"level":1,"title":"Git服务器搭建","paragraphId":"49662227921282575","subCatalogs":[{"level":2,"title":"安装Git","paragraphId":"49662227921282575","subCatalogs":null},{"level":2,"title":"创建证书登录","paragraphId":"49662227921282575","subCatalogs":null},{"level":2,"title":"初始化Git仓库","paragraphId":"49662227921282575","subCatalogs":null},{"level":2,"title":"克隆仓库","paragraphId":"49662227921282575","subCatalogs":null}]},{"level":1,"title":"参考文献","paragraphId":"-1","subCatalogs":null}],"paragraphs":[{"paragraphId":"49662227938059783","title":"简介","versionId":"50377872535234063","lemmaId":49361670824306440,"createType":0,"creator":{"uid":0,"name":null,"pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"createTime":0,"versionEditor":{"uid":81100166,"name":"Axing","pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"editTime":1597323551,"comment":null,"dependVersionId":0,"contentType":1,"content":"<p><img class=\"kx_img ed_imgfloat_right\" width=\"227\" height=\"174\" titlename=\"GIT\" bigsrc=\"https://img02.sogoucdn.com/app/a/200698/220_92_20200806211934-1445424197.png\" data-src=\"https://img02.sogoucdn.com/app/a/200698/220_92_20200806211934-1445424197.png\"></p><p>&nbsp; &nbsp; &nbsp; &nbsp;Git --- The stupid content tracker, 傻瓜内容跟踪器。</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ——Linus Torvalds</p><p>&nbsp; &nbsp; &nbsp; &nbsp;Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持，从而使源代码的发布和交流极其方便。 Git 的速度很快，非常适合于 Linux kernel 等大型项目，另外， Git有着出色的合并跟踪（merge tracing）能力。</p><p>&nbsp; &nbsp; &nbsp; &nbsp;Torvalds 开始着手开发 Git 是为了作为一种过渡方案来替代 BitKeeper，后者之前一直是 Linux 内核开发人员在全球使用的主要源代码工具。开放源码社区中的有些人觉得 BitKeeper 的许可证并不适合开放源码社区的工作，因此 Torvalds 决定着手研究许可证更为灵活的版本控制系统。尽管最初 Git 的开发是为了辅助 Linux 内核开发的过程，但是很多其他自由软件项目中也使用了 Git。</p>","pics":[{"originalUrl":"https://img02.sogoucdn.com/app/a/200698/220_92_20200806211934-1445424197.png?w=220&h=92&titlename=GIT","url":"https://img02.sogoucdn.com/app/a/200698/220_92_20200806211934-1445424197.png","rw":220,"rh":92,"title":"GIT","alt":null,"width":0,"height":0}],"card":null,"references":[],"versionCount":0},{"paragraphId":"49662227904505353","title":"Git的诞生","versionId":"61066699931189001","lemmaId":49361670824306440,"createType":0,"creator":{"uid":0,"name":null,"pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"createTime":0,"versionEditor":{"uid":15319069,"name":"103%","pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"editTime":1603694589,"comment":null,"dependVersionId":0,"contentType":1,"content":"<p>&nbsp; &nbsp; &nbsp; &nbsp;Linus在1991年创建了开源的Linux，从此，Linux系统不断发展，已经成为最大的服务器系统软件了<sup><a href=\"#quote_2\" class=\"kx_ref\">[2]</a></sup>。Linus虽然创建了Linux，但Linux的壮大是靠全世界热心的志愿者参与的，这么多人在世界各地为Linux编写代码，那Linux的代码是如何管理的呢？事实是，在2002年以前，世界各地的志愿者把源代码文件通过diff的方式发给Linus，然后由Linus本人通过手工方式合并代码！</p><p>&nbsp; &nbsp; &nbsp; &nbsp;Linus坚定地反对CVS和SVN这些免费的版本控制系统，因为他们不但速度慢，而且必须联网才能使用。有一些商用的版本控制系统，虽然比CVS、SVN好用，但那是付费的，和Linux的开源精神不符。到2002年，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了，社区的弟兄们也对这种方式表达了强烈不满，于是Linus选择了一个商业的版本控制系统BitKeeper，BitKeeper的东家BitMover公司出于人道主义精神，授权Linux社区免费使用这个版本控制系统。</p><p>&nbsp; &nbsp; &nbsp; &nbsp;安定团结的大好局面在2005年就被打破了，原因是Linux社区牛人聚集，不免沾染了一些梁山好汉的江湖习气。开发Samba的Andrew试图破解BitKeeper的协议（这么干的其实也不只他一个），被BitMover公司发现了（监控工作做得不错！），于是BitMover公司怒了，要收回Linux社区的免费使用权。于是Linus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git！一个月之内，Linux系统的源码已经由Git管理了！</p><p>&nbsp; &nbsp; &nbsp; &nbsp;Git迅速成为最流行的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。历史就是这么偶然，如果不是当年BitMover公司威胁Linux社区，可能现在我们就没有免费而超级好用的Git了。</p>","pics":null,"card":null,"references":[],"versionCount":0},{"paragraphId":"49662227921282576","title":"分布式特点","versionId":"61066699931189002","lemmaId":49361670824306440,"createType":0,"creator":{"uid":0,"name":null,"pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"createTime":0,"versionEditor":{"uid":15319069,"name":"103%","pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"editTime":1603694589,"comment":null,"dependVersionId":0,"contentType":1,"content":"<p>&nbsp; &nbsp; &nbsp; &nbsp;<img class=\"kx_img ed_imgfloat_right\" width=\"227\" height=\"174\" titlename=\"集中式\" bigsrc=\"https://img03.sogoucdn.com/app/a/200698/411_297_20200806224105-435287349.png\" data-src=\"https://img03.sogoucdn.com/app/a/200698/411_297_20200806224105-435287349.png\"><img class=\"kx_img ed_imgfloat_right\" width=\"227\" height=\"174\" titlename=\"分布式\" bigsrc=\"https://img02.sogoucdn.com/app/a/200698/504_433_20200806224117-364128338.png\" data-src=\"https://img02.sogoucdn.com/app/a/200698/504_433_20200806224117-364128338.png\">分布式是相对于集中式的，集中式版本控制系统的版本库是集中存放在中央服务器，开发者在本地利用自己的电脑设备进行开发，需要先从中央服务器取得最新的版本，然后进行开发，再将自己的代码推送给中央服务器。所以集中式需要联网，这也是其最大的弊病。</p><p>&nbsp; &nbsp; &nbsp; &nbsp;分布式版本控制系统没有“中央服务器”，每个人的电脑上都是一个完整的版本库，因此不需要联网。任何开发者有对于代码的修改，只需要互相进行推送即可。和集中式版本控制系统相比，分布式版本控制系统的安全性要高很多，因为每个人电脑里都有完整的版本库，存在着多个备份。</p>","pics":[{"originalUrl":"https://img03.sogoucdn.com/app/a/200698/411_297_20200806224105-435287349.png?w=411&h=297&titlename=%E9%9B%86%E4%B8%AD%E5%BC%8F","url":"https://img03.sogoucdn.com/app/a/200698/411_297_20200806224105-435287349.png","rw":411,"rh":297,"title":"集中式","alt":null,"width":0,"height":0},{"originalUrl":"https://img02.sogoucdn.com/app/a/200698/504_433_20200806224117-364128338.png?w=504&h=433&titlename=%E5%88%86%E5%B8%83%E5%BC%8F","url":"https://img02.sogoucdn.com/app/a/200698/504_433_20200806224117-364128338.png","rw":504,"rh":433,"title":"分布式","alt":null,"width":0,"height":0}],"card":null,"references":[],"versionCount":0},{"paragraphId":"49662227938059782","title":"Git安装","versionId":"61066699931189003","lemmaId":49361670824306440,"createType":0,"creator":{"uid":0,"name":null,"pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"createTime":0,"versionEditor":{"uid":15319069,"name":"103%","pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"editTime":1603694589,"comment":null,"dependVersionId":0,"contentType":1,"content":"<p><h3>Debian/Ubuntu</h3></p><p>Debian/Ubuntu Git 安装命令为：</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ apt-get install libcurl4-gnutls-dev libexpat1-dev gettext \\  libz-dev libssl-dev \n$ apt-get install git $ git --version git version 1.8.1.2</pre></p><p><h3>Centos/RedHat</h3></p><p>如果你使用的系统是 Centos/RedHat 安装命令为：</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ yum install curl-devel expat-devel gettext-devel \\  openssl-devel zlib-devel \n$ yum -y install git-core $ git --version git version 1.7.1</pre></p><p><h3>Windows</h3></p><p>可以到 GitHub 的页面上下载 exe 安装文件并运行.安装包下载地址：https://gitforwindows.org/</p><p>完成安装之后，就可以使用命令行的 git 工具（已经自带了 ssh 客户端）了，另外还有一个图形界面的 Git 项目管理工具。在开始菜单里找到\"Git\"-&gt;\"Git Bash\"，会弹出 Git 命令窗口，你可以在该窗口进行 Git 操作。<sup><a href=\"#quote_3\" class=\"kx_ref\">[3]</a></sup></p><p><h3>Mac 平台上安装</h3></p><p>在 Mac 平台上安装 Git 最容易的当属使用图形化的 Git 安装工具，下载地址为：</p><p>http://sourceforge.net/projects/git-osx-installer/</p>","pics":null,"card":null,"references":[],"versionCount":0},{"paragraphId":"49662227904505354","title":"工作流程","versionId":"61066699931189004","lemmaId":49361670824306440,"createType":0,"creator":{"uid":0,"name":null,"pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"createTime":0,"versionEditor":{"uid":15319069,"name":"103%","pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"editTime":1603694589,"comment":null,"dependVersionId":0,"contentType":1,"content":"<p>一般工作流程如下：<sup><a href=\"#quote_4\" class=\"kx_ref\">[4]</a></sup></p><p>\n <ul>\n  <li><p>克隆 Git 资源作为工作目录。</p></li>\n  <li><p>在克隆的资源上添加或修改文件。</p></li>\n  <li><p>如果其他人修改了，你可以更新资源。</p></li>\n  <li><p>在提交前查看修改。</p></li>\n  <li><p>提交修改。</p></li>\n  <li><p>在修改完成后，如果发现错误，可以撤回提交并再次修改并提交。</p></li>\n </ul></p>","pics":null,"card":null,"references":[],"versionCount":0},{"paragraphId":"49662227921282573","title":"基本概念","versionId":"61066699931189005","lemmaId":49361670824306440,"createType":0,"creator":{"uid":0,"name":null,"pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"createTime":0,"versionEditor":{"uid":15319069,"name":"103%","pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"editTime":1603694589,"comment":null,"dependVersionId":0,"contentType":1,"content":"<p>\n </p><ul>\n  <li><p>工作区：在电脑里能看到的目录</p></li>\n  <li><p>暂存区：英文叫stage, 或index。一般存放在 \".git目录下\" 下的index文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）</p></li>\n  <li><p>版本库：工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库<img class=\"kx_img ed_imgfloat_right currentPic\" width=\"227\" height=\"174\" titlename=\"\" bigsrc=\"https://img01.sogoucdn.com/app/a/200698/683_357_20200806225458-490737400.jpg\" data-src=\"https://img01.sogoucdn.com/app/a/200698/683_357_20200806225458-490737400.jpg\"></p></li>\n </ul><p></p>","pics":[{"originalUrl":"https://img01.sogoucdn.com/app/a/200698/683_357_20200806225458-490737400.jpg?w=683&h=357&titlename=","url":"https://img01.sogoucdn.com/app/a/200698/683_357_20200806225458-490737400.jpg","rw":683,"rh":357,"title":"","alt":null,"width":0,"height":0}],"card":null,"references":[],"versionCount":0},{"paragraphId":"49662227921282574","title":"Git创建仓库","versionId":"61066699931189006","lemmaId":49361670824306440,"createType":0,"creator":{"uid":0,"name":null,"pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"createTime":0,"versionEditor":{"uid":15319069,"name":"103%","pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"editTime":1603694589,"comment":null,"dependVersionId":0,"contentType":1,"content":"<p><h3>git init</h3></p><p>&nbsp; &nbsp; &nbsp; &nbsp;Git 使用&nbsp;git init&nbsp;命令来初始化一个 Git 仓库，Git 的很多命令都需要在 Git 的仓库中运行，所以&nbsp;git init&nbsp;是使用 Git 的第一个命令。</p><p>&nbsp; &nbsp; &nbsp; &nbsp;在执行完成&nbsp;git init&nbsp;命令后，Git 仓库会生成一个 .git 目录，该目录包含了资源的所有元数据，其他的项目目录保持不变（不像 SVN 会在每个子目录生成 .svn 目录，Git 只在仓库的根目录生成 .git 目录）。</p><p><h3>git clone</h3></p><p>我们使用&nbsp;git clone&nbsp;从现有 Git 仓库中拷贝项目（类似&nbsp;svn checkout）,如果我们需要克隆到指定的目录，可以使用以下命令格式：</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">git clone &lt;repo&gt; &lt;directory&gt;</pre></p><p>参数说明：</p><p>&nbsp; &nbsp; &nbsp; &nbsp;repo:Git 仓库</p><p>&nbsp; &nbsp; &nbsp; &nbsp;directory:本地目录</p>","pics":null,"card":null,"references":[],"versionCount":0},{"paragraphId":"49662227938059784","title":"Git基本快照","versionId":"61066699931189007","lemmaId":49361670824306440,"createType":0,"creator":{"uid":0,"name":null,"pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"createTime":0,"versionEditor":{"uid":15319069,"name":"103%","pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"editTime":1603694589,"comment":null,"dependVersionId":0,"contentType":1,"content":"<p><h3>git add</h3></p><p>git add 命令可将该文件添加到缓存，执行 git add 命令来添加文件：</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ git add &lt;filename&gt;</pre></p><p><h3>git status</h3></p><p>git status 以查看在你上次提交之后是否有修改。<br></p><p>演示该命令的时候加了 -s 参数，以获得简短的结果输出。如果没加该参数会详细输出内容：</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ git status</pre></p><p><h3>git diff</h3></p><p>执行 git diff 来查看执行 git status 的结果的详细信息。git diff 命令显示已写入缓存与已修改但尚未写入缓存的改动的区别。git diff 有两个主要的应用场景。</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">尚未缓存的改动：git diff\n查看已缓存的改动： git diff --cached\n查看已缓存的与未缓存的所有改动：git diff HEAD\n显示摘要而非整个 diff：git diff --stat</pre></p><p><h3>git commit</h3></p><p>使用 git add 命令将想要快照的内容写入缓存区， 而执行 git commit 将缓存区内容添加到仓库中。。</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ git commit -m &lt;comment&gt;</pre></p><p>如果你没有设置 -m 选项，Git 会尝试为你打开一个编辑器以填写提交信息。</p><p>如果觉得 git add 提交缓存的流程太过繁琐，Git 也允许你用 -a 选项跳过这一步。命令格式如下：</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">git commit -a &lt;comment&gt;\ngit commit -am &lt;comment&gt;</pre></p><p><h3>git reset HEAD</h3></p><p>git reset HEAD 命令用于取消已缓存的内容。</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ git reset HEAD &lt;filename&gt; </pre></p><p>简而言之，执行 git reset HEAD 以取消之前 git add 添加，但不希望包含在下一提交快照中的缓存。<br></p><p><h3>git rm</h3></p><p>如果只是简单地从工作目录中手工删除文件，运行&nbsp;git status&nbsp;时就会在&nbsp;Changes not staged for commit&nbsp;的提示。要从 Git 中移除某个文件，就必须要从已跟踪文件清单中移除，然后提交。可以用以下命令完成此项工作</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">git rm &lt;file&gt;</pre></p><p>如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项&nbsp;-f</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">git rm -f &lt;file&gt;</pre></p><p>如果把文件从暂存区域移除，但仍然希望保留在当前工作目录中，换句话说，仅是从跟踪清单中删除，使用&nbsp;--cached&nbsp;选项即可</p><p><h3>git mv</h3></p><p>git mv 命令用于移动或重命名一个文件、目录、软连接。</p><p>然后对其重名:<br></p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ git mv &lt;file1&gt; &lt;file2&gt;/&lt;dir&gt; </pre></p>","pics":null,"card":null,"references":[],"versionCount":0},{"paragraphId":"49662227904505350","title":"Git 分支管理","versionId":"61066699931189008","lemmaId":49361670824306440,"createType":0,"creator":{"uid":0,"name":null,"pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"createTime":0,"versionEditor":{"uid":15319069,"name":"103%","pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"editTime":1603694589,"comment":null,"dependVersionId":0,"contentType":1,"content":"<p>创建分支命令：</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">git branch (branchname)</pre></p><p>切换分支命令:</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">git checkout (branchname)</pre></p><p>当你切换分支的时候，Git 会用该分支的最后提交的快照替换你的工作目录的内容， 所以多个分支不需要多个目录。</p><p>合并分支命令:</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">git merge</pre></p><p>你可以多次合并到统一分支， 也可以选择在合并之后直接删除被并入的分支。</p><p><h3>列出分支</h3></p><p>列出分支基本命令：</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">git branch</pre></p><p><h3>删除分支</h3></p><p>删除分支命令：<br></p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">git branch -d (branchname)</pre></p><p><h3>分支合并</h3></p><p>一旦某分支有了独立内容，你终究会希望将它合并回到你的主分支。 你可以使用以下命令将任何分支合并到当前分支中去：</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">git merge &lt;branchname&gt;</pre></p><p><h3>合并冲突</h3></p><p>合并并不仅仅是简单的文件添加、移除的操作，Git 也会合并修改。</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">git merge</pre></p><p>Git 查看提交历史<br></p><p>在使用 Git 提交了若干更新之后，又或者克隆了某个项目，想回顾下提交历史，我们可以使用 git log 命令查看。使用 git log 命令列出历史提交记录如下：</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ git log</pre></p><p>可以用 --oneline 选项来查看历史记录的简洁的版本.</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ git log --oneline</pre></p><p>我们还可以用 --graph 选项，查看历史中什么时候出现了分支、合并。以下为相同的命令，开启了拓扑图选项：<br></p><p>现在我们可以更清楚明了地看到何时工作分叉、又何时归并。</p><p>也可以用&nbsp;--reverse&nbsp;参数来逆向显示所有日志。</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ git log --reverse --oneline</pre></p><p>如果只想查找指定用户的提交日志可以使用命令：git log --author , 例如，比方说我们要找 Git 源码中 Linus 提交的部分：</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ git log --author=&lt;name&gt; --oneline -5</pre></p>","pics":null,"card":null,"references":[],"versionCount":0},{"paragraphId":"49662227921282575","title":"Git服务器搭建","versionId":"61066699931189009","lemmaId":49361670824306440,"createType":0,"creator":{"uid":0,"name":null,"pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"createTime":0,"versionEditor":{"uid":15319069,"name":"103%","pic":null,"introduction":null,"educations":null,"jobs":null,"works":null,"educationBrief":null,"jobBrief":null,"role":0,"roleName":null,"title":null,"professionalTitle":null,"phoneNo":null,"editable":false,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"editTime":1603694589,"comment":null,"dependVersionId":0,"contentType":1,"content":"<p>Github 公开的项目是免费的，2019 年开始 Github 私有存储库也可以无限制使用。这当然我们也可以自己搭建一台 Git 服务器作为私有仓库使用。接下来以 Centos 为例搭建 Git 服务器。</p><p><h3>安装Git</h3></p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel \n$ yum install git</pre></p><p>接下来我们 创建一个git用户组和用户，用来运行git服务：</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ groupadd git \n$ useradd git -g git</pre></p><p><h3>创建证书登录</h3></p><p>收集所有需要登录的用户的公钥，公钥位于id_rsa.pub文件中，把我们的公钥导入到/home/git/.ssh/authorized_keys文件里，一行一个。</p><p>如果没有该文件创建它：</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ cd /home/git/$ mkdir .ssh \n$ chmod 755 .ssh $ touch .ssh/authorized_keys \n$ chmod 644 .ssh/authorized_keys</pre></p><p><h3>初始化Git仓库</h3></p><p>首先我们选定一个目录作为Git仓库，假定是/home/gitrepo/runoob.git，在/home/gitrepo目录下输入命令：</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ cd /home \n$ mkdir gitrepo \n$ chown git:git gitrepo/\n$ cd gitrepo \n$ git init --bare runoob.gitInitialized empty Git repository in /home/gitrepo/runoob.git/</pre></p><p>以上命令Git创建一个空仓库，服务器上的Git仓库通常都以.git结尾。然后，把仓库所属用户改为git：</p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ chown -R git:git runoob.git</pre></p><p><h3>克隆仓库</h3></p><p><pre data-lang=\"c_cpp\" class=\"kx_code\" contenteditable=\"false\">$ git clone git@192.168.45.4:/home/gitrepo/runoob.git\nCloning into 'runoob'...\nwarning: You appear to have cloned an empty repository.\nChecking connectivity... done.</pre></p><p>192.168.45.4 为 Git 所在服务器 ip ，你需要将其修改为你自己的 Git 服务 ip。</p><p>这样我们的 Git 服务器安装就完成。</p>","pics":null,"card":null,"references":[],"versionCount":0}],"references":[{"id":1,"type":"web","title":"About - Git","site":"GIT","url":"https://git-scm.com/about/free-and-open-source","journalName":null,"author":"","press":"","publishYear":"","publishTime":"","publishPlace":"","page":"","volume":"","quoteTime":"2020-08-06","quoted":false},{"id":2,"type":"web","title":"Git的诞生","site":"廖雪峰的官方网站","url":"https://www.liaoxuefeng.com/wiki/896043488029600/896202815778784","journalName":null,"author":"","press":"","publishYear":"","publishTime":"","publishPlace":"","page":"","volume":"","quoteTime":"2020-08-06","quoted":false},{"id":3,"type":"web","title":"Git 安装配置 | 菜鸟教程","site":"Runoob.com","url":"https://www.runoob.com/git/git-install-setup.html","journalName":null,"author":"","press":"","publishYear":"","publishTime":"","publishPlace":"","page":"","volume":"","quoteTime":"2020-08-06","quoted":false},{"id":4,"type":"web","title":"Git 工作流程 | 菜鸟教程","site":"RUNOOB.com","url":"https://www.runoob.com/git/git-workflow.html","journalName":null,"author":"","press":"","publishYear":"","publishTime":"","publishPlace":"","page":"","volume":"","quoteTime":"2020-08-06","quoted":false}],"recommendReferences":null,"auditState":2,"lemmaLevel":3,"origin":0,"originEnTitle":null,"originZhTitle":null,"pv":38199,"auditType":1,"synonyms":null,"showEditTime":"2020.10.26 14:43","auditors":[{"uid":626253,"name":"imlxl","pic":"https://img04.sogoucdn.com/app/a/200698/640_640_64744_20200210182617-1632103858.jpeg","introduction":" ","educations":null,"jobs":null,"works":null,"educationBrief":"","jobBrief":"","role":0,"roleName":null,"title":"","professionalTitle":null,"phoneNo":null,"editable":true,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},{"uid":70581328,"name":"stanny","pic":"https://cache.soso.com/qlogo/g?b=oidb&k=KgKISfdV2eoLCaMrCEAMkg&s=100&t=1557410199","introduction":"专注于搜狗科学","educations":[{"schoolName":"西安电子科技大学","major":"","degree":"硕士","universityId":102,"universityLogo":"https://img01.sogoucdn.com/app/a/200943/830d553e-6013-11e9-88dc-fc4dd4f70029","majorLevel1":"工学","majorLevel2":"计算机科学与技术","majorLevel3":"计算机科学与技术","majorLevel1Id":353,"majorLevel2Id":578,"majorLevel3Id":605,"state":"毕业","lab":"软件工程实验室","researchField":"大数据、物联网"}],"jobs":null,"works":[{"title":"Mg&#25530;&#26434;&#29992;&#20110;&#23545;&#31216;&#22266;&#20307;&#27687;&#21270;&#29289;&#29123;&#26009;&#30005;&#27744;&#30005;&#26497;&#26448;&#26009;&#30340;&#30005;&#21270;&#23398;&#24615;&#33021;&#21450;&#32467;&#26500;&#32784;&#20037;&#24615;","url":"https://www.sciencedirect.com/science/article/pii/S0920586120303503"}],"educationBrief":"西安电子科技大学","jobBrief":"","role":0,"roleName":null,"title":"西安电子科技大学 · 计算机科学与技术硕士","professionalTitle":null,"phoneNo":null,"editable":true,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false}],"hasZhishiNav":false,"auditInfos":{"0":[{"versionId":"0","auditTime":1603694892,"auditorId":70581328,"auditUser":{"uid":70581328,"name":"stanny","pic":"https://cache.soso.com/qlogo/g?b=oidb&k=KgKISfdV2eoLCaMrCEAMkg&s=100&t=1557410199","introduction":"专注于搜狗科学","educations":[{"schoolName":"西安电子科技大学","major":"","degree":"硕士","universityId":102,"universityLogo":"https://img01.sogoucdn.com/app/a/200943/830d553e-6013-11e9-88dc-fc4dd4f70029","majorLevel1":"工学","majorLevel2":"计算机科学与技术","majorLevel3":"计算机科学与技术","majorLevel1Id":353,"majorLevel2Id":578,"majorLevel3Id":605,"state":"毕业","lab":"软件工程实验室","researchField":"大数据、物联网"}],"jobs":null,"works":[{"title":"Mg&#25530;&#26434;&#29992;&#20110;&#23545;&#31216;&#22266;&#20307;&#27687;&#21270;&#29289;&#29123;&#26009;&#30005;&#27744;&#30005;&#26497;&#26448;&#26009;&#30340;&#30005;&#21270;&#23398;&#24615;&#33021;&#21450;&#32467;&#26500;&#32784;&#20037;&#24615;","url":"https://www.sciencedirect.com/science/article/pii/S0920586120303503"}],"educationBrief":"西安电子科技大学","jobBrief":"","role":0,"roleName":null,"title":"西安电子科技大学 · 计算机科学与技术硕士","professionalTitle":null,"phoneNo":null,"editable":true,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"auditReason":null,"auditSuggest":"暂无","auditResult":2,"auditAnnotations":[]},{"versionId":"0","auditTime":1603695242,"auditorId":626253,"auditUser":{"uid":626253,"name":"imlxl","pic":"https://img04.sogoucdn.com/app/a/200698/640_640_64744_20200210182617-1632103858.jpeg","introduction":" ","educations":null,"jobs":null,"works":null,"educationBrief":"","jobBrief":"","role":0,"roleName":null,"title":"","professionalTitle":null,"phoneNo":null,"editable":true,"partnerId":0,"partnerIdCreateTime":0,"partnerIdPoped":false},"auditReason":null,"auditSuggest":"通过","auditResult":2,"auditAnnotations":[]}]},"isHistory":false};</script><script crossorigin="anonymous" src="//hhy.sogoucdn.com/aegis-sdk/latest/aegis.min.js"></script><script crossorigin="anonymous" src="//hhy.sogoucdn.com/js/common/polyfill/main_2020092401.js"></script><script crossorigin="anonymous" src="//hhy.sogoucdn.com/js/lib/react/17.0.2/react.production.min.js"></script><script crossorigin="anonymous" src="//hhy.sogoucdn.com/js/lib/react/17.0.2/react-dom.production.min.js"></script><script crossorigin="anonymous" src="//hhy.sogoucdn.com/js/lib/jquery/jquery-1.11.1.min.js"></script><script crossorigin="anonymous" src="//hhy.sogoucdn.com/js/common/hhy/main_2022062701.js"></script><script crossorigin="anonymous" src="//hhy.sogoucdn.com/js/deploy/new_baike/pc/general/main_66bbe21.js"></script><script crossorigin="anonymous" src="//hhy.sogoucdn.com/js/lib/react/17.0.2/react.production.min.js"></script><script crossorigin="anonymous" src="//hhy.sogoucdn.com/js/lib/react/17.0.2/react-dom.production.min.js"></script><script crossorigin="anonymous" src="//hhy.sogoucdn.com/js/deploy/new_baike/pc/detail/main_edf0f08.js"></script><div id="popControl"></div></body></html>